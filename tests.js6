// jasmine.DEFAULT_TIMEOUT_INTERVAL = 5000;

class Wizard extends Persistient{
    constructor(name){
        super(name);
        this.name = name;
        this.friends = {};
    }

    befriend(friend){
        this.friends[friend.name] = friend;
    }
}

registerType(Wizard);

function emulateRefresh(done){
    loadedItems = {};
    setTimeout(done, 0)
}

describe('A wizard:', function() {
    var item;
    var changed;

    afterEach(function(){
        localStorage.clear();
    })


    it("Should have only two iterable properties", function(){
        var hermoine = new Wizard();

        var n = 0;
        for(var i in hermoine){
            n++;
        }
        expect(n).toBe(2);
    })

    it("Should remember their name after a refresh", function(){
        var hermoine = Wizard.create("Hermoine Granger")

        expect(hermoine.name).toBe("Hermoine Granger");

        emulateRefresh();

        var hermoine = Wizard.load("Hermoine Granger");

        expect(hermoine.name).toBe("Hermoine Granger");
    })

    it("Should be able to make and remember friends", function(done){
        var hermoine = Wizard.create("Hermoine Granger");
        var ron = Wizard.create("Ron Weasly");

        ron.petType = "Lost";
        expect(ron.petType).toBe("Lost");

        hermoine.befriend(ron);
        ron.befriend(hermoine);

        hermoine.friends["Ron Weasly"].petType = "Frog"
        expect(ron.petType).toBe("Frog");

        expect(hermoine.friends["Ron Weasly"]).toBe(ron);
        expect(ron.friends["Hermoine Granger"]).toBe(hermoine);

        emulateRefresh(function(){
            var hermoine = Wizard.load("Hermoine Granger");
            var ron = Wizard.load("Ron Weasly");

            expect(hermoine.friends["Ron Weasly"]).toBe(ron);
            expect(ron.friends["Hermoine Granger"]).toBe(hermoine);
            expect(hermoine.friends["Ron Weasly"].petType).toBe("Frog");
            done();
        });
    })

    it("Should override anything before it when created", function(){
        var moody = Wizard.create("Mad Eyed Moody");
        moody.compromised = false;

        var moody = Wizard.create("Mad Eyed Moody");
        expect(moody.compromised).toBe(undefined);
    })

    it("Shouldn't exist", function(){
        var jarred = Wizard.load("Jarred Filer");
        expect(jarred).toBe(undefined); //*sob*
    })

    it("Should remember the type of their age", function(){
        expect(true).toBe(true);
    })
})

describe("A muggle:", function(){
    afterEach(function(){
        localStorage.clear();
    })

    it("Should save and load", function(){
        var jarred = {age:21};
        Persistient.save("Jarred Filmer", jarred); //The id, and the object you want to keep around.

        jarred.age++;

        emulateRefresh();

        var jarred = Persistient.load("Jarred Filmer");

        expect(jarred.age).toBe(22);
    })
})